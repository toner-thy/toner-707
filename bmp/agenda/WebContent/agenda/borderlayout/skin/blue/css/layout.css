@charset "utf-8";

html
{
	min-height:100%;
	height:100%;
}

body
{
	min-height:100%;
	max-height:100%;
	height /*IE6不识别*/:100%;
}

*+html body /*仅IE7识别*/
{
	height: auto !important; /*重置为自动，以免出来双滚动条*/
}

html  {
	text-align: center; /* 在 IE 5* 浏览器中，这会将容器居中。文本随后将在 #container 选择器中设置为默认左对齐 */
	color: #000000;
	font-family: "宋体", "微软雅黑";
	font-size: small;
	/*width:100% ; /*不能调100%，这反而会很容易让 内容100%的宽度 + 边框 + padding导致 实际的总大小超出原100%大小*/
	min-width: 790px;
	max-width: 1600px;
	height:100%; /* needed for container min-height */

}

.twoColElsLtHdr #container {
	/*width: 100%;  /* 当文本保持浏览器的默认字体大小时，此宽度将创建一个适合 800px 浏览器窗口的容器 */
	background: #FFFFFF;
	margin: 0; /* 自动边距（与宽度一起）会将页面居中 */
	text-align: left; /* 这将覆盖 body 元素上的“text-align: center”。 */

	margin-right: 17px;
	position:relative; /* needed for footer positioning ，让footer粘到本container的底部，而非body的底部。如果没有该项，则页脚可能会因为窗口高度太小而覆盖内容区，因为footer的absolute定位会以body为准，但此时的body高度只是窗口高度的100%，而内容区此时可能因为内容太多而扩展高度而超过窗口高度的100%*/
	height:auto !important; /* real browsers */
	height:100%; /* IE6: treaded as min-height*/

	min-height:100%; /* real browsers*/
}
.twoColElsLtHdr #headcontainer {
	/*width: 100%;  /* 当文本保持浏览器的默认字体大小时，此宽度将创建一个适合 800px 浏览器窗口的容器 */
	background: #FFFFFF;
	margin: 0; /* 自动边距（与宽度一起）会将页面居中 */
	border: 1px solid #000000;
	text-align: left; /* 这将覆盖 body 元素上的“text-align: center”。 */
}
.twoColElsLtHdr #headcontainer #header {
	/*background: #DDDDDD; */
	padding: 0;  /* 此填充会将出现在它后面的 div 中的元素左对齐。如果 #header 中使用的是图像（而不是文本），您最好删除填充。 */

}

.twoColElsLtHdr #header {
	/*background: #DDDDDD; */
	padding: 0;  /* 此填充会将出现在它后面的 div 中的元素左对齐。如果 #header 中使用的是图像（而不是文本），您最好删除填充。 */

}
.twoColElsLtHdr #header h1 {
	margin: 0; /* 将 #header div 中最后一个元素的边距设置为零将避免边距重叠（即 div 之间出现的无法解释的空白）。如果 div 周围有边框，则不必将边距设置为零，因为边框也会避免边距重叠 */
	padding: 5px 0; /* 使用填充而不使用边距将可以使元素远离 div 的边缘 */
}

.twoColElsLtHdr #sidebar1 {
	float: left;
	width: 220px; /* 由于此元素是浮动的，因此必须指定宽度 */
	background: #EBEBEB; /* 将显示背景色，其宽度等于栏中内容的长度，*/
	padding: 0; /* 顶部和底部的填充将在该 div 中产生视觉空间 */
	margin: 3px 0;

}


.twoColElsLtHdr #sidebar1 h3, .twoColElsLtHdr #sidebar1 p {
	margin-left: 10px; /* 对于将要放在侧栏中的每个元素，都应当设置左边距和右边距 */
	margin-right: 10px;
}

.twoColElsLtHdr #mainContent {
	margin: 0; /* 右边距可以用全方 (em) 或像素来指定，它会在页面的右下方产生空白。 */
	padding:0 5px 28px 5px !important;/* bottom padding for footer ，防止被footer覆盖，因此将footer对象因为已从文档流中拖出(absolute决定) */
}
.twoColElsLtHdr #MainContent_Popwin {
	margin: 0; /* 右边距可以用全方 (em) 或像素来指定，它会在页面的右下方产生空白。 */
	padding:0 0 2.6em 0 !important;/* bottom padding for footer ，防止被footer覆盖，因此将footer对象因为已从文档流中拖出(absolute决定) */
}

#mainContent #mainfunc
{
	margin-top: 5px;
	margin-bottom:5px;
	height:20px;
	clear:both;
}
#mainContent #areadetailfunc /*树右侧功能区*/
{
	margin-top: 5px;
	height:30px;
	clear:both;
}

#mainContent #mainfunc_sub
{
	height:30px;
	clear:both;
	float:right;
	min-width:50px;
	max-width:300px;
	font-size:12px;
	text-align:right;
	line-height:30px;
}


#mainContent #content
{
	min-height:200px;
	clear:both;
}

/*==========树============*/
#areatree
{
	float:left;
	width:200px;
	height:500px;
	max-height:800px;
	overflow: auto !important;
	overflow-x: auto;
	overflow-y: auto;
	/*padding: 2px;*/
	SCROLLBAR-FACE-COLOR: #BED8EB;
	SCROLLBAR-SHADOW-COLOR: #DDF8FF;
	SCROLLBAR-HIGHLIGHT-COLOR: #92C0D1;
	SCROLLBAR-3DLIGHT-COLOR: #DDF8FF;
	SCROLLBAR-DARKSHADOW-COLOR: #92C0D1;
	SCROLLBAR-TRACK-COLOR:#ffffff;
	SCROLLBAR-ARROW-COLOR: #92C0D1;
	margin-left: 0px;
	border-right: 1px solid #996600;
}


/*在IE6以下，还是有可能因为整体宽度太少，导致本区域显示在下面了*/
#areadetail
{
/*	margin-left:172px; /*树的宽度*/
	/*margin-top:30px;*/
	min-height:200px;
	overflow-x:hidden;/*隐藏X滚动轴*/
    text-overflow: ellipsis;/*firefox支持*/
    -o-text-overflow: ellipsis;/*opera支持*/
	min-width:50%;
	max-width:100%;
}
* html #areadetail /*IE6及IE6以下识别*/
{
	float:right;
}


#areadetail h3
{
	font-size:14px;
	padding:0;
	margin:0;

}

.twoColElsLtHdr #footer {
	padding: 0 5px; /* 此填充会将它上面 div 中的所有元素左对齐。 */
	/*background:#DDDDDD;*/
	clear:both;
	/*margin-bottom:0;*/
	position:absolute;
	bottom: 0;/* !!!!stick to bottom !!!!*/
	min-width: 100%; /*强制让firefox满屏宽度显示（以container为准），因为absolute定位后，div宽度在firefox中会变得尽可能小*/
	max-width: 100%;
	visibility: visible;
	/*width:100%;/*IE会把它自动扩大满*/
	/*margin-right:10px;!!!!注意，absolute定位后，margin不再有效果*/
}
.twoColElsLtHdr #footer p {
	margin: 0; /* 将脚注中第一个元素的边距设置为零将避免出现可能的边距重叠（即 div 之间出现的空白）*/
	padding: 5px 0; /* 就像边距会产生空白一样，此元素上的填充也将产生空白，但不会出现边距重叠问题 */
}

/* 要重用的各种类 */
.fltrt { /* 此类可用来使页面中的元素向右浮动。浮动元素必须位于页面上要与之相邻的元素之前。 */
	float: right;
	margin-left: 8px;
}
.fltlft { /* 此类可用来使页面上的元素向左浮动 */
	float: left;
	margin-right: 8px;
}
.clearfloat { /* 此类应当放在 div 或 break 元素上，而且该元素应当是完全包含浮动的容器关闭之前的最后一个元素 */
	clear:both;
    height:0;
    font-size: 1px;
    line-height: 0px;
}
