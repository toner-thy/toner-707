/*==============================================================*/
/* DBMS name:      MySQL 5.0                                    */
/* Created on:     2012-12-14 16:19:39                          */
/*==============================================================*/


DROP TABLE IF EXISTS BM_KEY_DEP_PERSONS;

DROP TABLE IF EXISTS BM_KEY_PART_SECRECY_STATUS;

DROP TABLE IF EXISTS BM_KEY_SECTION_SECRECY_STATUS;

DROP TABLE IF EXISTS KEY_DEPARTMENT_PART;

DROP TABLE IF EXISTS KEY_PART;

DROP TABLE IF EXISTS KEY_PART_ENVIRONMENT;

DROP TABLE IF EXISTS KEY_PART_INSULATE_MEASURE;

DROP TABLE IF EXISTS KEY_PART_PERSON;

DROP TABLE IF EXISTS KEY_PART_SAFETY_MEASURE_BUILDING;

DROP TABLE IF EXISTS KEY_PART_SAFETY_MEASURE_SECTION;

DROP TABLE IF EXISTS KEY_PART_SCOPE;

DROP TABLE IF EXISTS KEY_PART_SECRECY_CARRIER;

DROP TABLE IF EXISTS KEY_PART_SECRECY_MODE;

DROP TABLE IF EXISTS KEY_SECTION;

DROP TABLE IF EXISTS KEY_SECTION_ENVIRONMENT;

DROP TABLE IF EXISTS KEY_SECTION_INSULATE_MEASURE;

DROP TABLE IF EXISTS KEY_SECTION_SAFETY_MEASURE_BUILDING;

DROP TABLE IF EXISTS KEY_SECTION_SAFETY_MEASURE_SECTION;

DROP TABLE IF EXISTS KEY_SECTION_SECRECY_CARRIER;

DROP TABLE IF EXISTS KEY_SECTION_SECRECY_MODE;

DROP TABLE IF EXISTS KEY_SECTION_SECRECY_SCOPE;

/*==============================================================*/
/* Table: BM_KEY_DEP_PERSONS                                    */
/*==============================================================*/
CREATE TABLE BM_KEY_DEP_PERSONS
(
   KEY_SECTION_ID       VARCHAR(32) COMMENT '主键ID（与部门表11对应）',
   PERSON_ID            VARCHAR(39)
);

ALTER TABLE BM_KEY_DEP_PERSONS COMMENT 'bm_key_dep_persons';

/*==============================================================*/
/* Table: BM_KEY_PART_SECRECY_STATUS                            */
/*==============================================================*/
CREATE TABLE BM_KEY_PART_SECRECY_STATUS
(
   KEY_PART_SECRECY_STATUS_ID VARBINARY(32) NOT NULL COMMENT '主键',
   KEY_PART_ID          VARCHAR(32) COMMENT '要害部位ID',
   SECRECY_PERSON_COUNT INT COMMENT '涉密人员数量',
   POST                 VARBINARY(64) COMMENT '主要岗位职责',
   SECRECY_QUALIFICATION_PASS_COUNT INT COMMENT '已经通过人数',
   SECRECY_QUALIFICATION_NOT_PASS_COUNT INT COMMENT '未通过人数',
   SECRECY_LEVEL_TOP_SECRET_COUNT INT COMMENT '核心人员人数',
   SECRECY_LEVEL_SECRET_COUNT INT COMMENT '重要涉密人员人数',
   SECRECY_LEVEL_PRIVACY_COUNT INT COMMENT '一般涉密人员人数',
   SIGN_SECRECY_OBLIGATION_COUNT INT COMMENT '已签定保密责任书人数',
   SIGN_SECRECY_EDUCATION_COUNT INT COMMENT '已参加保密教育培训人数',
   CERTIFICATE_COUNT    INT COMMENT '持证上岗人数',
   PRIMARY KEY (KEY_PART_SECRECY_STATUS_ID)
);

ALTER TABLE BM_KEY_PART_SECRECY_STATUS COMMENT '要害部位--涉密人员情况';

/*==============================================================*/
/* Table: BM_KEY_SECTION_SECRECY_STATUS                         */
/*==============================================================*/
CREATE TABLE BM_KEY_SECTION_SECRECY_STATUS
(
   KEY_PART_SECRECY_STATUS_ID VARBINARY(32) NOT NULL COMMENT '主键',
   KEY_SECTION_ID       VARCHAR(32) COMMENT '主键ID（与部门表11对应）',
   SECRECY_PERSON_COUNT INT COMMENT '涉密人员数量',
   SECRECY_QUALIFICATION_PASS_COUNT INT COMMENT '已经通过人数',
   SECRECY_QUALIFICATION_NOT_PASS_COUNT INT COMMENT '未通过人数',
   SECRECY_LEVEL_TOP_SECRET_COUNT INT COMMENT '核心人员人数',
   SECRECY_LEVEL_SECRET_COUNT INT COMMENT '重要涉密人员人数',
   SECRECY_LEVEL_PRIVACY_COUNT INT COMMENT '一般涉密人员人数',
   SIGN_SECRECY_OBLIGATION_COUNT INT COMMENT '已签定保密责任书人数',
   SIGN_SECRECY_EDUCATION_COUNT INT COMMENT '已参加保密教育培训人数',
   PRIMARY KEY (KEY_PART_SECRECY_STATUS_ID)
);

ALTER TABLE BM_KEY_SECTION_SECRECY_STATUS COMMENT '要害部门---涉密人员情况';

/*==============================================================*/
/* Table: KEY_DEPARTMENT_PART                                   */
/*==============================================================*/
CREATE TABLE KEY_DEPARTMENT_PART
(
   KEY_PART_ID          VARCHAR(32) COMMENT '要害部位ID',
   DEPARTMENT_ID        VARCHAR(39)
);

ALTER TABLE KEY_DEPARTMENT_PART COMMENT '部位部门中间表';

/*==============================================================*/
/* Table: KEY_PART                                              */
/*==============================================================*/
CREATE TABLE KEY_PART
(
   KEY_PART_ID          VARCHAR(32) NOT NULL COMMENT '要害部位ID',
   PART_NAME            VARCHAR(32) COMMENT '部位名称',
   SECRECY_LEVEL        INT COMMENT '涉密程度（1.绝密2.机密3.秘密）',
   FLOOR_NUM            VARCHAR(20) COMMENT '楼层房号',
   AREA_SIZE            FLOAT COMMENT '面积',
   IS_SELF_MANAGE       INT COMMENT '是否独立(1.是   2.不是)',
   IS_SPECIAL_USE       INT COMMENT '是否专用(1.是     2.不是)',
   IS_MANAGE_BY_KEY_SECTION INT COMMENT '是否受保密 要害部门管理(1.是  2.非)',
   TANK_NUM             INT COMMENT '存放涉密载体铁柜数量',
   PASSWORD_FILE_TANK_NUM INT COMMENT '存放涉密载体密码文件柜数量',
   SECRECY_CARRIER_TANK_NUM INT COMMENT '存放涉密载体保险柜数量',
   SECRECY_CARRIER_DISTURB_NUM INT COMMENT '存放涉密载体视频干扰器数量',
   SECRECY_EQUIPMENT_OTHER VARCHAR(100) COMMENT '涉密设备其他',
   AUTHORIZE_ORGAN      VARCHAR(50) COMMENT '批准机关',
   AUTHORIZE_DATE       DATETIME COMMENT '批准日期',
   ANNUL_PERSON         VARCHAR(32) COMMENT '撤销人（无删除，只能撤销）',
   ANNUL_DATE           DATETIME COMMENT '撤销日期',
   ANNUL_CAUSE          VARCHAR(500) COMMENT '撤销原因',
   REMARK               VARCHAR(500) COMMENT '备注',
   STATUS               INT COMMENT '状态',
   ORGAN_ID             VARCHAR(32) COMMENT '单位ID',
   CREATEPERSON         VARCHAR(32) COMMENT '输入人员',
   CREATE_TIME          DATETIME COMMENT '输入时间',
   MODIFY_PERSON        VARCHAR(32) COMMENT '修改人员',
   MODIFY_TIME          DATETIME COMMENT '修改时间',
   LOCATION             VARCHAR(100) COMMENT '四川省使用',
   SEC_SCOPE            VARCHAR(1000) COMMENT '四川省使用',
   SKILL_MEASURE        VARCHAR(100) COMMENT '四川省使用',
   MANAGER_RULE         INT COMMENT '四川省使用',
   DUTY_PERSON          VARCHAR(39),
   PRIMARY KEY (KEY_PART_ID)
);

ALTER TABLE KEY_PART COMMENT '要害部位表';

/*==============================================================*/
/* Table: KEY_PART_ENVIRONMENT                                  */
/*==============================================================*/
CREATE TABLE KEY_PART_ENVIRONMENT
(
   KEY_PART_ID          VARCHAR(32) COMMENT '主键ID（与部门表11对应）',
   ENVIRONMENT_ID       VARCHAR(32) NOT NULL COMMENT 'ID',
   PART_DESCRIBE        VARCHAR(100) COMMENT '其他描述',
   PART_OPTION          INT COMMENT '选项值 对照代码表',
   PRIMARY KEY (ENVIRONMENT_ID)
);

ALTER TABLE KEY_PART_ENVIRONMENT COMMENT '要害部门------防护设备';

/*==============================================================*/
/* Table: KEY_PART_INSULATE_MEASURE                             */
/*==============================================================*/
CREATE TABLE KEY_PART_INSULATE_MEASURE
(
   KEY_PART_ID          VARCHAR(32) COMMENT '主键ID（与部门表11对应）',
   INSULATE_MEASURE     VARCHAR(32) NOT NULL COMMENT 'ID',
   PART_DESCRIBE        VARCHAR(100) COMMENT '其他描述',
   PART_OPTION          INT COMMENT '选项值 对照代码表',
   PRIMARY KEY (INSULATE_MEASURE)
);

ALTER TABLE KEY_PART_INSULATE_MEASURE COMMENT '要害部门------隔离措施';

/*==============================================================*/
/* Table: KEY_PART_PERSON                                       */
/*==============================================================*/
CREATE TABLE KEY_PART_PERSON
(
   PART_PERSON_ID       VARCHAR(32) NOT NULL COMMENT 'ID',
   KEY_PART_ID          VARCHAR(32) COMMENT '要害部位ID',
   PERSON_ID            VARCHAR(39),
   PRIMARY KEY (PART_PERSON_ID)
);

ALTER TABLE KEY_PART_PERSON COMMENT '要害部位------人员';

/*==============================================================*/
/* Table: KEY_PART_SAFETY_MEASURE_BUILDING                      */
/*==============================================================*/
CREATE TABLE KEY_PART_SAFETY_MEASURE_BUILDING
(
   KEY_PART_ID          VARCHAR(32) COMMENT '主键ID（与部门表11对应）',
   SAFETY_MEASURE_BUILDING_ID VARCHAR(32) NOT NULL COMMENT 'ID',
   PART_DESCRIBE        VARCHAR(100) COMMENT '其他描述',
   PART_OPTION          INT COMMENT '选项值 对照代码表',
   PRIMARY KEY (SAFETY_MEASURE_BUILDING_ID)
);

ALTER TABLE KEY_PART_SAFETY_MEASURE_BUILDING COMMENT '要害部门------防护措施';

/*==============================================================*/
/* Table: KEY_PART_SAFETY_MEASURE_SECTION                       */
/*==============================================================*/
CREATE TABLE KEY_PART_SAFETY_MEASURE_SECTION
(
   KEY_PART_ID          VARCHAR(32) COMMENT '主键ID（与部门表11对应）',
   SAFETY_PART_ID       VARCHAR(32) NOT NULL COMMENT 'ID',
   PART_DESCRIBE        VARCHAR(100) COMMENT '其他描述',
   PART_OPTION          INT COMMENT '选项值 对照代码表',
   PRIMARY KEY (SAFETY_PART_ID)
);

ALTER TABLE KEY_PART_SAFETY_MEASURE_SECTION COMMENT '要害部门------防护措施';

/*==============================================================*/
/* Table: KEY_PART_SCOPE                                        */
/*==============================================================*/
CREATE TABLE KEY_PART_SCOPE
(
   KEY_PART_ID          VARCHAR(32) COMMENT '主键ID（与部门表11对应）',
   PART_SCOPE_ID        VARCHAR(32) NOT NULL COMMENT '方式ID',
   PART_DESCRIBE        VARCHAR(100) COMMENT '其他描述',
   PART_OPTION          INT COMMENT '选项值 对照代码表',
   PRIMARY KEY (PART_SCOPE_ID)
);

ALTER TABLE KEY_PART_SCOPE COMMENT '要害部门存放其他泄密载体';

/*==============================================================*/
/* Table: KEY_PART_SECRECY_CARRIER                              */
/*==============================================================*/
CREATE TABLE KEY_PART_SECRECY_CARRIER
(
   KEY_PART_ID          VARCHAR(32) COMMENT '主键ID（与部门表11对应）',
   PART_CARRIER         VARCHAR(32) NOT NULL COMMENT 'ID',
   PART_DESCRIBE        VARCHAR(100) COMMENT '其他描述',
   PART_OPTION          INT COMMENT '选项值 对照代码表',
   PRIMARY KEY (PART_CARRIER)
);

ALTER TABLE KEY_PART_SECRECY_CARRIER COMMENT '要害部门存放其他泄密载体';

/*==============================================================*/
/* Table: KEY_PART_SECRECY_MODE                                 */
/*==============================================================*/
CREATE TABLE KEY_PART_SECRECY_MODE
(
   KEY_PART_ID          VARCHAR(32) COMMENT '主键ID（与部门表11对应）',
   PART_MODE_ID         VARCHAR(32) NOT NULL COMMENT 'ID',
   PART_DESCRIBE        VARCHAR(100) COMMENT '其他描述',
   PART_OPTION          INT COMMENT '选项值 对照代码表',
   PRIMARY KEY (PART_MODE_ID)
);

ALTER TABLE KEY_PART_SECRECY_MODE COMMENT '要害部门存放其他泄密载体';

/*==============================================================*/
/* Table: KEY_SECTION                                           */
/*==============================================================*/
CREATE TABLE KEY_SECTION
(
   KEY_SECTION_ID       VARCHAR(39) NOT NULL COMMENT '主键ID（与部门表11对应）',
   DEPARTMENT_ID        VARCHAR(39),
   SECRECY_LEVEL        INT COMMENT '密级（1.绝密2.机密3.秘密）（涉及的最高密级）',
   AUTHORIZE_ORGAN      VARCHAR(50) COMMENT '批准机关',
   AUTHORIZE_DATE       DATETIME COMMENT '批准日期',
   IMPORTANCE           INT COMMENT '重要性（1.核心保密部门2.重要保密部门3.一般保密部门）',
   SEC_SCOPE            VARCHAR(1024) COMMENT '涉密工作事项及范围（原涉密范围）',
   ANNUL_PERSON         VARCHAR(39) COMMENT '撤销人（无删除，只能撤销）',
   ANNUL_DATE           DATETIME COMMENT '撤销日期',
   ANNUL_CAUSE          VARCHAR(500) COMMENT '撤销原因',
   REMARK               VARCHAR(500) COMMENT '备注',
   STATUS               INT COMMENT '状态',
   TANK_NUM             INT COMMENT '存放涉密载体铁柜数量',
   PASSWORD_FILE_TANK_NUM INT COMMENT '存放涉密载体密码文件柜数量',
   SECRECY_CARRIER_TANK_NUM INT COMMENT '存放涉密载体保险柜数量',
   SECRECY_CARRIER_DISTURB_NUM INT COMMENT '存放涉密载体视频干扰器数量',
   MAIN_AREA            VARCHAR(500) COMMENT '所在办公楼环境',
   ORGAN_ID             VARCHAR(39) COMMENT '单位ID',
   CREATE_PERSON        VARCHAR(39) COMMENT '输入人员',
   CREATE_TIME          DATETIME COMMENT '输入时间',
   MODIFY_PERSON        VARCHAR(39) COMMENT '修改人员',
   MODIFY_TIME          DATETIME COMMENT '修改时间',
   PERSON_NUM           INT COMMENT '四川省使用字段',
   PRINCIPAL            VARCHAR(39) COMMENT '负责人',
   PHONE				VARCHAR(32) COMMENT '联系电话',
   PRIMARY KEY (KEY_SECTION_ID)
);

ALTER TABLE KEY_SECTION COMMENT '要害部门表';

/*==============================================================*/
/* Table: KEY_SECTION_ENVIRONMENT                               */
/*==============================================================*/
CREATE TABLE KEY_SECTION_ENVIRONMENT
(
   KEY_SECTION_ID       VARCHAR(32) COMMENT '主键ID（与部门表11对应）',
   ENVIRONMENT_ID       VARCHAR(32) NOT NULL COMMENT 'ID',
   SECTION_DESCRIBE     VARCHAR(100) COMMENT '其他描述',
   SECTION_OPTION       INT COMMENT '选项值 对照代码表',
   PRIMARY KEY (ENVIRONMENT_ID)
);

ALTER TABLE KEY_SECTION_ENVIRONMENT COMMENT '要害部门------防护设备';

/*==============================================================*/
/* Table: KEY_SECTION_INSULATE_MEASURE                          */
/*==============================================================*/
CREATE TABLE KEY_SECTION_INSULATE_MEASURE
(
   KEY_SECTION_ID       VARCHAR(32) COMMENT '主键ID（与部门表11对应）',
   INSULATE_MEASURE     VARCHAR(32) NOT NULL COMMENT 'ID',
   SECTION_DESCRIBE     VARCHAR(100) COMMENT '其他描述',
   SECTION_OPTION       INT COMMENT '选项值 对照代码表',
   PRIMARY KEY (INSULATE_MEASURE)
);

ALTER TABLE KEY_SECTION_INSULATE_MEASURE COMMENT '要害部门------隔离措施';

/*==============================================================*/
/* Table: KEY_SECTION_SAFETY_MEASURE_BUILDING                   */
/*==============================================================*/
CREATE TABLE KEY_SECTION_SAFETY_MEASURE_BUILDING
(
   KEY_SECTION_ID       VARCHAR(32) COMMENT '主键ID（与部门表11对应）',
   SAFETY_MEASURE_BUILDING_ID VARCHAR(32) NOT NULL COMMENT 'ID',
   SECTION_DESCRIBE     VARCHAR(100) COMMENT '其他描述',
   SECTION_OPTION       INT COMMENT '选项值 对照代码表',
   PRIMARY KEY (SAFETY_MEASURE_BUILDING_ID)
);

ALTER TABLE KEY_SECTION_SAFETY_MEASURE_BUILDING COMMENT '要害部门------防护措施';

/*==============================================================*/
/* Table: KEY_SECTION_SAFETY_MEASURE_SECTION                    */
/*==============================================================*/
CREATE TABLE KEY_SECTION_SAFETY_MEASURE_SECTION
(
   KEY_SECTION_ID       VARCHAR(32) COMMENT '主键ID（与部门表11对应）',
   SAFETY_SECTION_ID    VARCHAR(32) NOT NULL COMMENT 'ID',
   SECTION_DESCRIBE     VARCHAR(100) COMMENT '其他描述',
   SECTION_OPTION       INT COMMENT '选项值 对照代码表',
   PRIMARY KEY (SAFETY_SECTION_ID)
);

ALTER TABLE KEY_SECTION_SAFETY_MEASURE_SECTION COMMENT '要害部门------防护措施';

/*==============================================================*/
/* Table: KEY_SECTION_SECRECY_CARRIER                           */
/*==============================================================*/
CREATE TABLE KEY_SECTION_SECRECY_CARRIER
(
   KEY_SECTION_ID       VARCHAR(32) COMMENT '主键ID（与部门表11对应）',
   SECRECY_CARRIER      VARCHAR(32) NOT NULL COMMENT 'ID',
   SECTION_DESCRIBE     VARCHAR(100) COMMENT '其他描述',
   SECTION_OPTION       INT COMMENT '选项值 对照代码表',
   PRIMARY KEY (SECRECY_CARRIER)
);

ALTER TABLE KEY_SECTION_SECRECY_CARRIER COMMENT '要害部门存放其他泄密载体';

/*==============================================================*/
/* Table: KEY_SECTION_SECRECY_MODE                              */
/*==============================================================*/
CREATE TABLE KEY_SECTION_SECRECY_MODE
(
   KEY_SECTION_ID       VARCHAR(32) COMMENT '主键ID（与部门表11对应）',
   SECRECY_MODE_ID      VARCHAR(32) NOT NULL COMMENT '方式ID',
   SECTION_OPTION       INT COMMENT '选项值 对照代码表',
   SECTION_DESCRIBE     VARCHAR(100) COMMENT '其他描述',
   PRIMARY KEY (SECRECY_MODE_ID)
);

ALTER TABLE KEY_SECTION_SECRECY_MODE COMMENT '要害部门存放其他泄密载体';

/*==============================================================*/
/* Table: KEY_SECTION_SECRECY_SCOPE                             */
/*==============================================================*/
CREATE TABLE KEY_SECTION_SECRECY_SCOPE
(
   KEY_SECTION_ID       VARCHAR(32) COMMENT '主键ID（与部门表11对应）',
   SECRECY_SCOPE_ID     VARCHAR(32) NOT NULL COMMENT '方式ID',
   SECTION_DESCRIBE     VARCHAR(100) COMMENT '其他描述',
   SECTION_OPTION       INT COMMENT '选项值 对照代码表',
   PRIMARY KEY (SECRECY_SCOPE_ID)
);

ALTER TABLE KEY_SECTION_SECRECY_SCOPE COMMENT '要害部门存放其他泄密载体';

ALTER TABLE BM_KEY_DEP_PERSONS ADD CONSTRAINT FK_KEY_SECTION_DEPORTMENT FOREIGN KEY (KEY_SECTION_ID)
      REFERENCES KEY_SECTION (KEY_SECTION_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE BM_KEY_DEP_PERSONS ADD CONSTRAINT FK_KEY_SECTION_PART_PERSON FOREIGN KEY (PERSON_ID)
      REFERENCES SYS_USER_INFO (PERSON_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE BM_KEY_PART_SECRECY_STATUS ADD CONSTRAINT FK_KEY_PART_FK1 FOREIGN KEY (KEY_PART_ID)
      REFERENCES KEY_PART (KEY_PART_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE BM_KEY_SECTION_SECRECY_STATUS ADD CONSTRAINT FK_KEY_SECTION_SEC_PERSON FOREIGN KEY (KEY_SECTION_ID)
      REFERENCES KEY_SECTION (KEY_SECTION_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE KEY_DEPARTMENT_PART ADD CONSTRAINT FK_DEPARTMENT_KEY_SECTION FOREIGN KEY (DEPARTMENT_ID)
      REFERENCES SYS_DEPARTMENT (DEPARTMENT_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE KEY_DEPARTMENT_PART ADD CONSTRAINT FK_KEY_PART_KEY_DEPARTMENT_PART FOREIGN KEY (KEY_PART_ID)
      REFERENCES KEY_PART (KEY_PART_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE KEY_PART_ENVIRONMENT ADD CONSTRAINT FK_KEY_PART_ENVIRONMENT FOREIGN KEY (KEY_PART_ID)
      REFERENCES KEY_PART (KEY_PART_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE KEY_PART_INSULATE_MEASURE ADD CONSTRAINT FK_KEY_PART_INSULATE_MEASURE FOREIGN KEY (KEY_PART_ID)
      REFERENCES KEY_PART (KEY_PART_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE KEY_PART_PERSON ADD CONSTRAINT FK_KEY_PART_USER_INFO FOREIGN KEY (PERSON_ID)
      REFERENCES SYS_USER_INFO (PERSON_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE KEY_PART_PERSON ADD CONSTRAINT FK_KEY_SECTION_KEY_PART_USER FOREIGN KEY (KEY_PART_ID)
      REFERENCES KEY_PART (KEY_PART_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE KEY_PART_SAFETY_MEASURE_BUILDING ADD CONSTRAINT FK_KEY_PART_SAFETY_MEASURE_BUILDING FOREIGN KEY (KEY_PART_ID)
      REFERENCES KEY_PART (KEY_PART_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE KEY_PART_SAFETY_MEASURE_SECTION ADD CONSTRAINT FK_KEY_PART_SAFETY_MEASURE_SECTION FOREIGN KEY (KEY_PART_ID)
      REFERENCES KEY_PART (KEY_PART_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE KEY_PART_SCOPE ADD CONSTRAINT FK_KEY_PART_SCOPE FOREIGN KEY (KEY_PART_ID)
      REFERENCES KEY_PART (KEY_PART_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE KEY_PART_SECRECY_CARRIER ADD CONSTRAINT FK_KEY_PART_SECRECY_CARRIER FOREIGN KEY (KEY_PART_ID)
      REFERENCES KEY_PART (KEY_PART_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE KEY_PART_SECRECY_MODE ADD CONSTRAINT FK_KEY_PART_SECRECY_MODE FOREIGN KEY (KEY_PART_ID)
      REFERENCES KEY_PART (KEY_PART_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE KEY_SECTION ADD CONSTRAINT FK_KEY_SECTION_DEPARTMENT_FK FOREIGN KEY (DEPARTMENT_ID)
      REFERENCES SYS_DEPARTMENT (DEPARTMENT_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE KEY_SECTION ADD CONSTRAINT FK_KEY_SECTION_PRINCIPAL FOREIGN KEY (PRINCIPAL)
      REFERENCES SYS_USER_INFO (PERSON_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE KEY_SECTION_ENVIRONMENT ADD CONSTRAINT FK_KEY_SECTION_ENVIRONMENT FOREIGN KEY (KEY_SECTION_ID)
      REFERENCES KEY_SECTION (KEY_SECTION_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE KEY_SECTION_INSULATE_MEASURE ADD CONSTRAINT FK_KEY_SECTION_INSULATE_MEASURE FOREIGN KEY (KEY_SECTION_ID)
      REFERENCES KEY_SECTION (KEY_SECTION_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE KEY_SECTION_SAFETY_MEASURE_BUILDING ADD CONSTRAINT FK_KEY_SECTION_SAFETY_MEASURE_BUILDING FOREIGN KEY (KEY_SECTION_ID)
      REFERENCES KEY_SECTION (KEY_SECTION_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE KEY_SECTION_SAFETY_MEASURE_SECTION ADD CONSTRAINT FK_KEY_SECTION_SAFETY_SECTION FOREIGN KEY (KEY_SECTION_ID)
      REFERENCES KEY_SECTION (KEY_SECTION_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE KEY_SECTION_SECRECY_CARRIER ADD CONSTRAINT FK_KEY_SECTION_OTHER_SECRECY_CARRIER_1 FOREIGN KEY (KEY_SECTION_ID)
      REFERENCES KEY_SECTION (KEY_SECTION_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE KEY_SECTION_SECRECY_MODE ADD CONSTRAINT FK_REFERENCE_SECTION_SECRECY_MODE FOREIGN KEY (KEY_SECTION_ID)
      REFERENCES KEY_SECTION (KEY_SECTION_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE KEY_SECTION_SECRECY_SCOPE ADD CONSTRAINT FK_REFERENCE_KEY_SECTION_SECRECY_SCOPE FOREIGN KEY (KEY_SECTION_ID)
      REFERENCES KEY_SECTION (KEY_SECTION_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

